version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28  # gcloud is baked into this image
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
         command: sudo chmod +x ./gradlew
      - run:
          name: Remove local settings
          command: rm local.properties      
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Build debug APK and release APK
          command: |
            ./gradlew :app:assembleDebug
            ./gradlew :app:assembleDebugAndroidTest
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY | base64 -di > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account firebase-adminsdk-144gc@app-automation-test.iam.gserviceaccount.com --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project app-automation-test #${GOOGLE_PROJECT_ID}
      - run:
          name: Test with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run \
              --type instrumentation \
              --app app/build/outputs/apk/debug/app-debug.apk \
              --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
              --device model=Nexus5X,version=26,locale=en_US,orientation=portrait \
              --environment-variables coverage=true,coverageFile=/sdcard/tmp/code-coverage/connected/coverage.ec \
              --directories-to-pull=/sdcard/tmp \
              --timeout 20m
            #sudo gcloud firebase test android run \ 
              #--app <local_server_path>/<app_apk>.apk \ 
              #--test <local_server_path>/<app_test_apk>.apk \ 
              #--results-bucket cloud-test-${GOOGLE_PROJECT_ID}
      #- run:
          #name: Install gsutil dependency and copy test results data
          #command: |
            #sudo pip install -U crcmod
            #sudo gsutil -m cp -r -U `sudo gsutil ls gs://[BUCKET_NAME]/[OBJECT_NAME] | tail -1` ${CIRCLE_ARTIFACTS}/ | true
